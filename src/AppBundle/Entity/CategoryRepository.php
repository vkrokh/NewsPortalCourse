<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Query\ResultSetMapping;
use PDO;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends \Doctrine\ORM\EntityRepository
{

    public function sendToDataBase(Category $category)
    {
        $entityManager = $this->getEntityManager();
        $entityManager->persist($category);
        $entityManager->flush();
    }

    public function deleteFromDataBase(int $categoryId)
    {
        $entityManager = $this->getEntityManager();
        $category = $entityManager->getRepository('AppBundle:Category')->findOneById($categoryId);
        $entityManager->remove($category);
        $entityManager->flush();
    }

    private function getSortField(string $sortFieled)
    {
        if ($sortFieled == 'date') {
            return 'created_at';
        }
        return 'views';
    }

    public function getCategoryNews(int $id, string $sortField, string $sortType)
    {
        $entityManager = $this->getEntityManager();
        $sortField = 'news.' . $this->getSortField($sortField);
        $sql = 'SELECT news.name,news.description, news.views, news.created_at, news.id , news.user_name  FROM news_category 
                INNER JOIN news WHERE news.id = news_category.news_id AND news_category.category_id = :id ORDER BY ' . $sortField . ' ' . $sortType;
        $stmt = $entityManager->getConnection()->prepare($sql);
        $stmt->bindValue(':id', $id);
        $stmt->execute();
        $result = $stmt->fetchAll();
        return $result;
    }

    public function getCategory(int $id)
    {
        $entityManager = $this->getEntityManager();
        $category = $entityManager->getRepository('AppBundle:Category')->findOneById($id);
        return $category;
    }


}
